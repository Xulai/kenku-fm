version: 2.1
orbs:
  node: circleci/node@5.0.0

executors:
  linux-arm:
    machine:
      image: ubuntu-2004:202101-01

commands:
  install-npm:
    steps:
      - node/install:
          node-version: "16.13.2"
      - node/install-yarn:
          version: "1.22.5"
  
  install-dependencies:
    steps:
      - run:
          name: Install Dependencies
          command: yarn install --non-interactive --frozen-lockfile
  
  publish-electron-app:
    steps:
      - run:
          name: Publish
          command: yarn run publish
          environment: 
            CARGO_NET_GIT_FETCH_WITH_CLI: "true"
  
  yarn-make:
    steps:
      - run:
          name: Make Package
          command: yarn run make
          environment: 
            CARGO_NET_GIT_FETCH_WITH_CLI: "true"

  get-images:
    steps:
      - run:
          name: Get Images
          command: git clone https://$GITHUB_TOKEN@github.com/owlbear-rodeo/kenku-fm-assets.git
  
  move-images:
    steps:
      - run:
          name: Move Images to Directory
          command: | 
            mv ./kenku-fm-assets/backgrounds/*.jpg ./src/player/backgrounds
            rm -rf ./kenku-fm-assets

jobs:
  publish-electron-app-linux-arm:
    executor: linux-arm
    resource_class: arm.medium
    working_directory: ~/repo
    steps:
      - install-npm
      - run:
          name: Install dpkg, fakeroot and rust
          command: |
            sudo apt-get update -y
            sudo apt-get install -y dpkg fakeroot rpm
            curl https://sh.rustup.rs -sSf | sh -s -- -y
            source $HOME/.cargo/env
      - run: 
          name: Install Rust Version
          command: |
            rustup install 1.68.0
      - run: 
          name: Install CMake
          command: sudo apt-get install cmake -y
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - install-dependencies
      - save_cache:
          key: dependency-cache-{{ .Environment.CACHE_VERSION }}-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - get-images
      - move-images
      - run:
          name: Install Cargo CP Artifcact
          command: npm install -g cargo-cp-artifact
      - publish-electron-app

workflows:
  version: 2
  deploy-linux-arm:
    jobs:
      - publish-electron-app-linux-arm:
          filters: &tag
            tags:
              only: 
                - /^v[0-9]+(\.[0-9]+)*-linux-arm$/
                - /^v[0-9]+(\.[0-9]+)*-([a-z]+)*-linux-arm$/
                - /^v[0-9]+(\.[0-9]+)*-([a-z]+)*[\.0-9]+-linux-arm$/
            branches:
              ignore: /.*/
